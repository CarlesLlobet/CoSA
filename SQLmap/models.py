from __future__ import unicode_literals
from datetime import datetime

from django.contrib.auth.models import User
from django.db import models

# Here the task results will be stored with their previous ID
class sqlmap_results(models.Model):
    id = models.IntegerField(primary_key=True)
    output = models.TextField(null=True)
    report = models.TextField(null=True)
    finish_date = models.DateTimeField('date created', null=True)

# Create your models here.
class sqlmap_requests(models.Model):
    # ID autogenerated as primary key

    Verbosities = ((0, 'errors'), (1, 'warnings'), (2, 'debug'), (3, 'payloads'), (4, 'requests'), (5, 'resp.headers'),
                   (6, 'resp.content'))
    Levels = ((1, 'get&post'), (2, 'cookie'), (3, 'user-agent'), (4, 'almost_everything'), (5, 'everything'))
    Risks = ((1, 'low'), (2, 'long_time'), (3, 'or_queries'))
    Depths = ((0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'),
              (7, '7'), (8, '8'), (9, '9'), (10, '10'))
    CharSets = (('UTF-8', 'Eight-bit UCS Transformation Format'), ('ISO-8859-1', 'ISO Latin Alphabet No. 1, a.k.a. ISO-LATIN-1'),
                ('US-ASCII', 'Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set'),
                ('UTF-16BE', 'Sixteen-bit UCS Transformation Format, big-endian byte order'),
                ('UTF-16LE', 'Sixteen-bit UCS Transformation Format, little-endian byte order'),
                ('UTF-16', 'Sixteen-bit UCS Transformation Format, byte order identified by an optional byte-order mark'))

    States = (('On Hold', 'On Hold'), ('Running', 'Running'), ('Finished', 'Finished'), ('Blocked', 'Blocked'), ('Deleted', 'Deleted'), ('Saved', 'Saved'))

    # Task name
    name = models.CharField(max_length=100)

    # User
    user = models.ForeignKey(User, on_delete=models.CASCADE)

    # Target
    target = models.CharField(max_length=100)

    #Config (levels)
    charset = models.CharField(choices=CharSets, max_length=10)
    verbosity = models.IntegerField(choices=Verbosities)
    level = models.IntegerField(choices=Levels)
    risk = models.IntegerField(choices=Risks)
    depth = models.IntegerField(choices=Depths)
    state = models.CharField(choices=States, max_length=20)
    mail = models.CharField(max_length=100, null=True)

    #Guardem la data d'insercio
    insert_date = models.DateTimeField('date created', default=datetime.now)

    # Guardem la data de modificacio
    modify_date = models.DateTimeField('date modified', null=True)



